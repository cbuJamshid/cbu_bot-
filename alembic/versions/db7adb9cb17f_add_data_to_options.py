"""add data to options

Revision ID: db7adb9cb17f
Revises: dae5538b2f8f
Create Date: 2024-04-07 17:20:27.821072

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from data.questions import questions_ru, questions_uz_kiril, questions_uz_latin
from DAL.Repository.QuestionRepository import QuestionRepository
from sqlalchemy import MetaData, Table

# revision identifiers, used by Alembic.
revision: str = 'db7adb9cb17f'
down_revision: Union[str, None] = 'dae5538b2f8f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None



def bulk_create_ru_questions_options(options_table: sa.Table):
    ru_number = 1
    answers_data = []
    for question in questions_ru:
        try:
            q_id = QuestionRepository.getByLanguageNumber("ru", ru_number).id
            answers = question["answers"]
            for answer in answers:
                q_option = {"question_id": q_id, "option_text": answer}
                answers_data.append(q_option)
        except:
            pass
        ru_number += 1

    op.bulk_insert(options_table, answers_data)


def bulk_create_uzlatin_questions_options(options_table: sa.Table):
    uzlatin_number = 1
    answers_data = []
    for question in questions_uz_latin:
        try:
            q_id = QuestionRepository.getByLanguageNumber("uzlatin", uzlatin_number).id
            answers = question["answers"]
            for answer in answers:
                q_option = {"question_id": q_id, "option_text": answer}
                answers_data.append(q_option)
        except:
            pass
        uzlatin_number += 1

    op.bulk_insert(options_table, answers_data)


def bulk_create_uzkiril_questions_options(options_table: sa.Table):
    uzkiril_number = 1
    answers_data = []
    for question in questions_uz_kiril:
        try:
            q_id = QuestionRepository.getByLanguageNumber("uzkiril", uzkiril_number).id
            answers = question["answers"]
            for answer in answers:
                q_option = {"question_id": q_id, "option_text": answer}
                answers_data.append(q_option)
        except:
            pass
        uzkiril_number += 1

    op.bulk_insert(options_table, answers_data)




def upgrade() -> None:
    meta = MetaData()
    options_table = Table('options', meta, autoload_with=op.get_bind())
    bulk_create_ru_questions_options(options_table)
    bulk_create_uzlatin_questions_options(options_table)
    bulk_create_uzkiril_questions_options(options_table)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("TRUNCATE TABLE options CASCADE")
